{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-challenge\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputList, setInputList] = useState(\"apple\");\n  const [item, setItem] = useState([]);\n  const itemEvent = event => {\n    setInputList(event.target.value);\n  };\n  const listItem = () => {\n    setItem;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"To Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a item\",\n          onChange: itemEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: listItem,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: item.map(itemval => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: itemval\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"j9TihK4p8fQxA1ojhA1AYcVSq5k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputList","setInputList","item","setItem","itemEvent","event","target","value","listItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","itemval","_c","$RefreshReg$"],"sources":["D:/react/todo-challenge/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst App = () => {\r\n\r\n    const [inputList, setInputList] = useState(\"apple\");\r\n    const [item, setItem] = useState([]);\r\n\r\n    const itemEvent = (event) => {\r\n        setInputList(event.target.value);\r\n    };\r\n\r\n    const listItem = () =>{\r\n        setItem\r\n\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"main_div\">\r\n                <div className=\"center_div\">\r\n                    <br/>\r\n                    <h1>To Do List</h1>\r\n                    <br />\r\n                    <input type=\"text\" placeholder='Add a item' onChange={itemEvent}/>\r\n                    <button onClick={listItem}>+</button>\r\n\r\n                    <ol>\r\n                    {item.map((itemval) => {\r\n                        return <li>{itemval}</li>;\r\n                    })}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,SAAS,GAAIC,KAAK,IAAK;IACzBJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAK;IAClBL,OAAO;EAEX,CAAC;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACId,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAD,QAAA,eACrBd,OAAA;QAAKe,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBd,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLnB,OAAA;UAAAc,QAAA,EAAI;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBnB,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,YAAY;UAACC,QAAQ,EAAEb;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAClEnB,OAAA;UAAQuB,OAAO,EAAEV,QAAS;UAAAC,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAErCnB,OAAA;UAAAc,QAAA,EACCP,IAAI,CAACiB,GAAG,CAAEC,OAAO,IAAK;YACnB,oBAAOzB,OAAA;cAAAc,QAAA,EAAKW;YAAO;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAC7B,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAGX,CAAC;AAACf,EAAA,CAlCID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}